<?php

/**
 * @file
 * Fieldgroup module.
 *
 * For an overview of all php and javascript hooks, see uc_attribute_stock.api.php.
 *
 */

/**
 * Implements hook_menu().
 */
function uc_attribute_stock_menu() {
  $items = array();
    $items['attribute_stock/ajax/%'] = array(
    'title' => t('Attribute stock'),
    'page callback' => 'uc_attribute_stock_ajax',
    'page arguments' => array(2),
    'access arguments' => array('access content'),
    'type' => MENU_CALLBACK,
    'file' => 'uc_attribute_stock.admin.inc',
  );
  $items['node/%node/edit/attribute_stock'] = array(
    'title' => 'Attribute stock',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('uc_attribute_stock_form', 1),
    'access callback' => array('uc_attribute_stock_form_access'),
    'access arguments' => array(1),
    'weight' => 10,
    'type' => MENU_LOCAL_TASK,
    'file' => 'uc_attribute_stock.admin.inc',
  );
  


  return $items;
}

/**
 * Implements hook_theme().
 */
function uc_attribute_stock_theme() {
  return array(
    'uc_attribute_stock_form' => array(
      'render element' => 'form'
    ),
  );
}

/**
 * Implements hook_admin_paths().
 */
function uc_attribute_stock_admin_paths() {
  $paths = array(
    'node/*/edit/attribute_stock' => TRUE,
  );

  return $paths;
}


/**
 * Implements hook_permission().
 */
function uc_attribute_stock_permission() {
  return array(
    'administer attribute stock' => array(
      'title' => t('Attribute stock'),
      'description' => t('Display the administration for Attribute stock.'),
    ),
  );
}

/**
 * Access callback for node/%node/edit/stock.
 */
function uc_attribute_stock_form_access($node) {
  return TRUE;
}

function uc_attribute_stock_form_alter(&$form, &$form_state, $form_id) {
  if($form_state['rebuild'] == TRUE) {
    
  }
  else {
    $re="/^(uc_product_add_to_cart_form_)(.*)$/";
   
    if(preg_match($re, $form_id)) { 
      module_load_include('inc', 'uc_attribute', 'uc_attribute.admin');
      $form['#validate'][] = 'attribute_form_validate';
      #$form['#validate'][] = 'uc_attribute_option_form_validate';
  
  
      $data = get_attributes($form['nid']['#value']);
      
      if(empty($data)) {
        return;
      }
  
      $select_options[''] = t('Please select');
      foreach($data as $key => $value) {
        $option = '';
        $option_value = '';
        foreach($value['combination'] as $key => $value) {
          if(empty($option)) {
             $option = $form['attributes'][$value['attribute']]['#options'][$value['option']];
             $option_value = $value['attribute'] . '-' . $value['option'];
             
          }
          else {
             $option .= ' - ' . $form['attributes'][$value['attribute']]['#options'][$value['option']];
             $option_value .= '-' .$value['attribute'] . '-' . $value['option'];
          }
        }
        $select_options[$option_value] = $option;
      }
      $form['my_attributes']['#tree'] = TRUE;
      $form['my_attributes'][] = array(
        '#type' => 'select',
        '#options' => $select_options,
        '#description' => t('Please choose a type.'),
        '#default_value' => '',
        '#required' => 1,
        '#title' => t('Type'),
      );
      $form['attributes']['#access'] = FALSE;
      
    }
  }
}



function attribute_form_validate($form, &$form_state) {
  $key = 0;
  if(isset($form_state['values']['my_attributes'][$key])) {
    $value = $form_state['values']['my_attributes'][$key];
      if(is_numeric($key)) {
        if(empty($value)) {
          #drupal_set_message(t('Please select an option'), 'error');
          #form_set_error('t', 'Please select an option');
        }
        else {
          
          $parse = preg_split('/\-/', $value);
    
          for($i = 0; $i<count($parse); $i = $i+2) {
            $attribute = $parse[$i];
            $option = $parse[$i+1];
            form_set_value($form['attributes'][$attribute], $option, $form_state);
          }
        }
      }
    #$form_state['rebuild'] == TRUE;
  }


}

function get_attributes($nid) {
  $select = db_select('uc_attribute_stock', 'uas');
  $arguments = array(':nid' => $nid);
  $select->condition('nid', $nid, '=');
  $select->condition('stock', 0, '>');
  
  $select->fields('uas');
  $result = $select->execute()->fetchAll();
  
  $data = array();
  
  foreach ($result as $row) {
    $comb = unserialize($row->combination);
    
    
    foreach ($comb as $key => $value) {
      $combination['option'] = $value;
      $combination['attribute'] = $key;  
      
      $my_row['combination'][] = $combination;    
    }
    
    $my_row['stock'] = $row->stock;
    $my_row['treshold'] = $row->treshold;
    $my_row['uas_id'] = $row->id;
    $my_row['active'] = $row->active;
    
    $data[] = $my_row;
    $my_row = '';
  }
  return $data;
}